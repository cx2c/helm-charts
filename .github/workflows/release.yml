name: release

permissions:
  contents: write # to push chart release and create a release (helm/chart-releaser-action)
  packages: write # needed for ghcr access
  id-token: write # needed for keyless signing

defaults:
  run:
    shell: bash

on:
  workflow_dispatch: { }
  push:
    branches:
      - "main"
    paths:
      - "charts/**"

jobs:
  release:
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.13.3
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.CI_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.CI_GPG_PASSPHRASE }}
      - name: Configure PGP Key
        run: |
          IFS=""
          echo "$GPG_PRIVATE_KEY" | gpg --dearmor > ${{ runner.temp }}/pubring.gpg
          echo "$GPG_PASSPHRASE" > ${{ runner.temp }}/passphrase.txt
        env:
          GPG_PRIVATE_KEY: "${{ secrets.CI_GPG_PRIVATE_KEY }}"
          GPG_PASSPHRASE: "${{ secrets.CI_GPG_PASSPHRASE }}"
      - name: Release
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_KEY: "Seal <ci@seal.io>"
          CR_SIGN: true
          CR_KEYRING: "${{ runner.temp }}/pubring.gpg"
          CR_PASSPHRASE_FILE: "${{ runner.temp }}/passphrase.txt"
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Login GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Github Container Registry
        run: |
          shopt -s nullglob
          for pkg in ${{ github.workspace }}/.cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" "oci://ghcr.io/${{ github.repository }}"
          done
